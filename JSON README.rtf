{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier-Oblique;\f2\fmodern\fcharset0 Courier;
\f3\fmodern\fcharset0 Courier-Bold;\f4\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red51\green110\blue109;
\red38\green38\blue38;\red83\green83\blue83;\red169\green14\blue26;\red15\green112\blue1;\red0\green0\blue0;
\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c100000\c100000\c100000;\cssrgb\c25098\c50196\c50196;
\cssrgb\c20000\c20000\c20000;\cssrgb\c40000\c40000\c40000;\cssrgb\c72941\c12941\c12941;\cssrgb\c0\c50196\c0;\cssrgb\c0\c0\c0;
\cssrgb\c100000\c100000\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 JSON Project: In this project, we obtained practice using read_json and json_normalize to open json files and perform some analysis.\
\

\b Question1: Find the top 10 countries with the most project.\

\b0 \
\pard\pardeftab720\sl320\partightenfactor0

\f1\i\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Load pandas dataframe from json file.Groupby 'countryname' column and apply the size method to find the number of projects for each country.Sort the series in descending order and apply the .head() method to find the top 10 countries with most projects.
\f2\i0 \strokec5 \
\pard\pardeftab720\sl320\partightenfactor0
\cf5 \
\cf2 df \strokec6 =\strokec5  pd\strokec6 .\strokec5 read_json(\strokec7 'data/world_bank_projects.json'\strokec5 )\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 country_names \strokec6 =\strokec5  df\strokec6 .\strokec5 groupby(\strokec7 'countryname'\strokec5 )\strokec6 .\strokec5 size()\strokec6 .\strokec5 sort_values(ascending\strokec6 =
\f3\b \strokec8 False
\f2\b0 \strokec5 )\
country_names\strokec6 .\strokec5 head(\strokec6 10\strokec5 )\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \

\f3\b Question 2: Find the top 10 major project themes.
\f2\b0 \
\
\pard\pardeftab720\sl320\partightenfactor0

\f1\i \cf2 \strokec4 Load json file as a string. Load json file as a string
\f2\i0 \strokec5 \

\f1\i \strokec4 Groupby 'name' column and apply the size method to find the number of instances for each project theme
\f2\i0 \strokec5 . 
\f1\i \strokec4 Sort the series in descending order and apply the head method to find the top 10 themes.
\f2\i0 \strokec5 \
\
js \strokec6 =\strokec5  json\strokec6 .\strokec5 load((\strokec8 open\strokec5 (\strokec7 'data/world_bank_projects.json'\strokec5 )))\
themes \strokec6 =\strokec5  json_normalize(js, \strokec7 'mjtheme_namecode'\strokec5 )\
themes\strokec6 .\strokec5 groupby(\strokec7 'name'\strokec5 )\strokec6 .\strokec5 size()\strokec6 .\strokec5 sort_values(ascending\strokec6 =
\f3\b \strokec8 False
\f2\b0 \strokec5 )\strokec6 .\strokec5 head(\strokec6 10\strokec5 )\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\partightenfactor0
\ls1\ilvl0
\f4 \cf9 \cb10 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 Question 3: Fill in the blanks\
\ls1\ilvl0
\f2 \cf2 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl320\partightenfactor0

\f1\i \cf2 \cb3 \outl0\strokewidth0 \strokec4 Replace blanks in the name column with NaN. Groupby 'code' column and apply the bfill method to fill in the null values. 
\f2\i0 \strokec5 \
\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb3 \outl0\strokewidth0 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb3 \outl0\strokewidth0 \strokec5 t2\strokec6 .\strokec5 name\strokec6 .\strokec5 replace(\strokec7 ''\strokec5 ,np\strokec6 .\strokec5 nan,inplace\strokec6 =
\f3\b \strokec8 True
\f2\b0 \strokec5 )\
t3 \strokec6 =\strokec5  t2\strokec6 .\strokec5 groupby(\strokec7 'code'\strokec5 , as_index \strokec6 =\strokec5  
\f3\b \strokec8 False
\f2\b0 \strokec5 )\strokec6 .\strokec5 bfill()\
t3\
}